<% provide(:title, t('profile')) %>
<h1><%= t('profile') %></h1>

<script>
<%
techs_str = ''
techs = Technology.where(:is_rated => 0).order("title ASC")
techs = techs.sort_by &:tree_title
techs.each do |tech|
  techs_str += "{value: '" + tech.id.to_s + "', label: '" + tech.tree_title + "'},";
end
techs_str = techs_str[0, techs_str.size - 1]
%>
var technologies_tokens = [<% safe_concat techs_str %>];
</script>

<div class="login-panel panel panel-default">
  <div class="panel-body">
    <%= form_for(@user) do |f| %>
    <%= render 'shared/error_messages', object: f.object %>
    <fieldset>
      <div class="form-group<%= f.object.errors[:email].any? ? ' has-error has-feedback' : '' %>">
        <%= f.email_field :email, class: 'form-control', placeholder: t('email'), autofocus: true %>
      </div>
      <div class="form-group<%= f.object.errors[:password].any? ? ' has-error has-feedback' : '' %>">
        <%= f.password_field :password, class: 'form-control', placeholder: t('password') %>
      </div>
      <div class="form-group<%= f.object.errors[:password_confirmation].any? ? ' has-error has-feedback' : '' %>">
        <%= f.password_field :password_confirmation, class: 'form-control', placeholder: t('password_confirm') %>
      </div>
      <div class="form-group<%= f.object.errors[:first_name].any? ? ' has-error has-feedback' : '' %>">
        <%= f.text_field :first_name, class: 'form-control', placeholder: t('first_name') %>
      </div>
      <div class="form-group<%= f.object.errors[:last_name].any? ? ' has-error has-feedback' : '' %>">
        <%= f.text_field :last_name, class: 'form-control', placeholder: t('last_name') %>
      </div>
      <div class="form-group">
        <%= f.select :technology_id, options_for_select(@technologies.collect { |tech| [tech.title, tech.id] }, @user.technology_id), {}, { id: 'users_technologies_select_' + @user.id.to_s, :class => 'form-control'} %>
      </div>
      <div class="form-group">
        <input type="hidden" id="iduser_<%= @user.id %>_tech_competencies" name="user[tech_competencies]" value="" />
        <input id="user_tech_<%= @user.id %>" type="text" class="form-control tokenize" placeholder="<%= t('token_technologies') %>" value="" />
        <script>
          $(function() {
            jQuery.noConflict();
            $('#user_tech_<%= @user.id %>')
            .tokenfield({
              autocomplete: { source: technologies_tokens, delay: 100 },
              showAutocompleteOnFocus: true,
            })
            .on('tokenfield:createtoken', function (event) {
              var existingTokens = $(this).tokenfield('getTokens');
              $.each(existingTokens, function(index, token) {
                if (token.value === event.attrs.value)
                    event.preventDefault();
              });
            })
            .on('tokenfield:createdtoken', function (e) {
              var v = $('#iduser_<%= @user.id %>_tech_competencies').val();
              if (v == '')
                v = ',';
              v +=  e.attrs.value + ',';
              $('#iduser_<%= @user.id %>_tech_competencies').val(v);
            })
            .on('tokenfield:removedtoken', function (e) {
              v = $('#iduser_<%= @user.id %>_tech_competencies').val();
              v = v.replace(',' + e.attrs.value + ',', ',');
              $('#iduser_<%= @user.id %>_tech_competencies').val(v);
            });
            $('#user_tech_<%= @user.id %>').tokenfield('setTokens', [<% safe_concat @utechnologies_titles %>]);
          });
        </script>
      </div>
      <div class="form-group">
        <%= f.select :position_id, options_for_select(@positions.where(:technology_id => @user.technology_id).collect { |pos| [pos.title, pos.id] }, @user.position_id), {:selected => @user.position_id}, {id: 'users_positions_select_' + @user.id.to_s, :class => 'form-control'} %>
      </div>
      <div class="form-group">
        <%= f.collection_select :client_id, @clients, :id, :title, {}, {:class => 'form-control'} %>
      </div>
      <div class="form-group">
        <div class="checkbox">
          <label><%= f.check_box :is_am %> <%= t('is_account_manager') %></label>
        </div>
      </div>
      <div class="form-group">
        <div class="checkbox">
          <label><%= f.check_box :is_pdm %> <%= t('is_production_manager') %></label>
        </div>
      </div>
    </fieldset>
      <%= f.submit t('button_save_changes'), class: "btn btn-lg btn-success btn-block" %>
    </fieldset>
    <% end %>
  </div>
</div>